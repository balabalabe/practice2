class A{}; //sizeof(A)=1

class B{ //sizeof(B)=1
public:
    B() {}
    ~B() {}
};

class C{ //sizeof(C)=4
public:
    C() {}
    virtual ~C() {}
};

class G :public A, public C {}; //sizeof(G)=4
class H :public A, public B, public C {}; //sizeof(H)=8
class I :public A, public C, public B {}; //sizeof(I)=8


class D { //sizeof(D)=1
    char ch;
    void func() {} //普通成员函数为各实例公有，不归入sizeof的统计
};

class E { //sizeof(E)=8
    char ch1; //占用1字节
    char ch2; //占用1字节
    virtual void func() {} //指向虚函数表的指针，占4个字节
};

class F { //sizeof(F)=8
    int a; //占4个字节
    virtual void func() {} //指向虚函数表的指针，占4个字节
};

class A1{};
class A2{};
class A3{};
class A4{};
class G :public A{}                                         //sizeof(G)=1
class G :public A, public B{}                               //sizeof(G)=1
class G :public A, public B, public A1{}                    //sizeof(G)=2
class G :public A, public B ,public A1, public A2{}         //sizeof(G)=3

class H :public A, public C, public A1, public A2, public A3, public A4, public B {}; //sizeof(H)=12 
//(4+1+1+1+1+1内存对齐得到12)

class H :public A, public C, public A1, public A2, public A3,  public B {}; //sizeof(H)=8  (刚好4+4=8)
